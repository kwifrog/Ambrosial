buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = "https://repo.spongepowered.org/repository/maven-public/" }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.1.+', changing: true
        classpath group: "org.spongepowered", name: "mixingradle", version: "0.7-SNAPSHOT"
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: "org.spongepowered.mixin"

mixin {
    add sourceSets.main, '${mod_id}.refmap.json'
}

version = '${mc_version}-${mod_version}'
group = 'com.kiwioflesbos.ambrosial'
archivesBaseName = 'ambrosial'

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'official', version: '1.16.5'

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.disableRefMap', 'true'
            arg '-mixin.config=' + '${mod_id}' + '.mixins.json'

            mods {
                ambrosial {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.disableRefMap', 'true'
            arg '-mixin.config=' + '${mod_id}' + '.mixins.json'

            mods {
                ambrosial {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.disableRefMap', 'true'
            arg '-mixin.config=' + '${mod_id}' + '.mixins.json'
            args "--mod", '${mod_id}', "--all", "--output", file("src/generated/resources/"), "--existing", file("src/main/resources")

            mods {
                ambrosial {
                    source sourceSets.main
                }
            }
        }
    }
}

    repositories {
        maven {
            // location of the maven that hosts JEI files
            name = "Progwml6 maven"
            url = "https://dvs1.progwml6.com/files/maven/"
        }
        maven {
            // location of a maven mirror for JEI files, as a fallback
            name = "ModMaven"
            url = "https://modmaven.k-4u.nl"
        }
        maven {
            name = "CurseMaven"
            url = "https://www.cursemaven.com"
        }
    }

// Include resources generated by data generators.
sourceSets.main.resources {
    srcDir 'src/generated/resources'
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.1.32'
    implementation fg.deobf("curse.maven:farmers_delight-398521:${farmersDelight}")

    compileOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}:api")
    runtimeOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}")

    //runtimeOnly fg.deobf("curse.maven:farmers_delight-398521:${farmersDelight}")
    runtimeOnly fg.deobf("curse.maven:appleskin-248787:${appleSkin}")

    annotationProcessor 'org.spongepowered:mixin:0.8.2:processor'

}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
            "Specification-Title": '${mod_name}',
            "Specification-Vendor": 'KiwiOfLesbos',
            "Specification-Version": '1',
            "Implementation-Title": '${mod_name}',
            "Implementation-Version": '${mod_version',
            "Implementation-Vendor" :'KiwiOfLesbos',
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            "MixinConfigs"            : '${mod_id}' + ".mixins.json"
        ])
    }
}

// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar') 
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
//publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
